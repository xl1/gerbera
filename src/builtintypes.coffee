to = require './typeoperation'

vec4 = to.create 'vec4'
func = to.create 'function'

module.exports =
  gl_Position: vec4
  gl_PointSize: vec4
  gl_ClipVertex: vec4
  gl_FragCoord: vec4
  gl_FrontFacing: vec4
  gl_FragColor: vec4
  gl_FragData: vec4
  gl_FragDepth: vec4
  gl_Color: vec4
  gl_SecondaryColor: vec4
  gl_Normal: vec4
  gl_Vertex: vec4
  gl_MultiTexCoord0: vec4
  gl_MultiTexCoord1: vec4
  gl_MultiTexCoord2: vec4
  gl_MultiTexCoord3: vec4
  gl_MultiTexCoord4: vec4
  gl_MultiTexCoord5: vec4
  gl_MultiTexCoord6: vec4
  gl_MultiTexCoord7: vec4
  gl_FogCoord: vec4
  gl_MaxLights: vec4
  gl_MaxClipPlanes: vec4
  gl_MaxTextureUnits: vec4
  gl_MaxTextureCoords: vec4
  gl_MaxVertexAttribs: vec4
  gl_MaxVertexUniformComponents: vec4
  gl_MaxVaryingFloats: vec4
  gl_MaxVertexTextureImageUnits: vec4
  gl_MaxCombinedTextureImageUnits: vec4
  gl_MaxTextureImageUnits: vec4
  gl_MaxFragmentUniformComponents: vec4
  gl_MaxDrawBuffers: vec4
  gl_ModelViewMatrix: vec4
  gl_ProjectionMatrix: vec4
  gl_ModelViewProjectionMatrix: vec4
  gl_TextureMatrix: vec4
  gl_NormalMatrix: vec4
  gl_ModelViewMatrixInverse: vec4
  gl_ProjectionMatrixInverse: vec4
  gl_ModelViewProjectionMatrixInverse: vec4
  gl_TextureMatrixInverse: vec4
  gl_ModelViewMatrixTranspose: vec4
  gl_ProjectionMatrixTranspose: vec4
  gl_ModelViewProjectionMatrixTranspose: vec4
  gl_TextureMatrixTranspose: vec4
  gl_ModelViewMatrixInverseTranspose: vec4
  gl_ProjectionMatrixInverseTranspose: vec4
  gl_ModelViewProjectionMatrixInverseTranspose: vec4
  gl_TextureMatrixInverseTranspose: vec4
  gl_NormalScale: vec4
  gl_DepthRangeParameters: vec4
  gl_DepthRange: vec4
  gl_ClipPlane: vec4
  gl_PointParameters: vec4
  gl_Point: vec4
  gl_MaterialParameters: vec4
  gl_FrontMaterial: vec4
  gl_BackMaterial: vec4
  gl_LightSourceParameters: vec4
  gl_LightSource: vec4
  gl_LightModelParameters: vec4
  gl_LightModel: vec4
  gl_LightModelProducts: vec4
  gl_FrontLightModelProduct: vec4
  gl_BackLightModelProduct: vec4
  gl_LightProducts: vec4
  gl_FrontLightProduct: vec4
  gl_BackLightProduct: vec4
  gl_FogParameters: vec4
  gl_Fog: vec4
  gl_TextureEnvColor: vec4
  gl_EyePlaneS: vec4
  gl_EyePlaneT: vec4
  gl_EyePlaneR: vec4
  gl_EyePlaneQ: vec4
  gl_ObjectPlaneS: vec4
  gl_ObjectPlaneT: vec4
  gl_ObjectPlaneR: vec4
  gl_ObjectPlaneQ: vec4
  gl_FrontColor: vec4
  gl_BackColor: vec4
  gl_FrontSecondaryColor: vec4
  gl_BackSecondaryColor: vec4
  gl_TexCoord: vec4
  gl_FogFragCoord: vec4
  gl_Color: vec4
  gl_SecondaryColor: vec4
  gl_TexCoord: vec4
  gl_FogFragCoord: vec4
  gl_PointCoord: vec4
  radians: func
  degrees: func
  sin: func
  cos: func
  tan: func
  asin: func
  acos: func
  atan: func
  pow: func
  exp: func
  log: func
  exp2: func
  log2: func
  sqrt: func
  inversesqrt: func
  abs: func
  sign: func
  floor: func
  ceil: func
  fract: func
  mod: func
  min: func
  max: func
  clamp: func
  mix: func
  step: func
  smoothstep: func
  length: func
  distance: func
  dot: func
  cross: func
  normalize: func
  faceforward: func
  reflect: func
  refract: func
  matrixCompMult: func
  lessThan: func
  lessThanEqual: func
  greaterThan: func
  greaterThanEqual: func
  equal: func
  notEqual: func
  any: func
  all: func
  not: func
  texture2D: func
  texture2DProj: func
  texture2DLod: func
  texture2DProjLod: func
  textureCube: func
  textureCubeLod: func
